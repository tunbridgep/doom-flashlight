class FlashlightBatteryUpgrade : Inventory
{
    Default
    {
        +INVENTORY.UNDROPPABLE;
        +INVENTORY.HUBPOWER;
        +INVENTORY.PERSISTENTPOWER;
        +INVENTORY.KEEPDEPLETED;
        +INVENTORY.UNTOSSABLE;
        +INVENTORY.IGNORESKILL;
        -INVENTORY.INVBAR;
        +DONTGIB;
        +NOGRAVITY;
        +COUNTITEM;
        Inventory.PickupSound "misc/gettool" ;
	    Inventory.PickupMessage "$FLASHLIGHT_BATT_EXP_PICKUP";
        Inventory.InterHubAmount 999;
        Inventory.MaxAmount 999;
        Inventory.Amount 1;
        Scale 0.4;
    }
	States 
	{ 
	    Spawn: 
		    CELP A -1;
    		Loop;
    }
    
    override bool CanPickup(Actor toucher)
    {
        bool allow = flashlight_battery_upgrade_max_amount <= 0 || toucher.CountInv("FlashlightBatteryUpgrade") < flashlight_battery_upgrade_max_amount;
        return allow && super.CanPickup(toucher);
    }
}

class FlashlightBatteryRecharge : FlashlightBatteryUpgrade
{
    Default
    {
        Inventory.PickupMessage "$FLASHLIGHT_BATT_PICKUP";
    }
    
    override bool CanPickup(Actor toucher)
    {
        bool allow = flashlight_battery_recharge_max_amount <= 0 || toucher.CountInv("FlashlightBatteryRecharge") < flashlight_battery_recharge_max_amount;
        return allow && super.CanPickup(toucher);
    }
}
