class PermanentItem : Inventory
{
    Default
    {
        +INVENTORY.UNDROPPABLE;
        +INVENTORY.ALWAYSPICKUP;
        //+INVENTORY.UNCLEARABLE;
        +INVENTORY.HUBPOWER;
        +INVENTORY.PERSISTENTPOWER;
        +INVENTORY.UNTOSSABLE;
        +INVENTORY.IGNORESKILL;
        //+INVENTORY.INVBAR;
        Inventory.InterHubAmount 1;
        Inventory.MaxAmount 1;
    }
}

class FlashlightStartToken : PermanentItem
{
}

class FlareRecharger : PermanentItem
{
    int Count;

	void PlayRechargeSound()
	{
		PlayerInfo myinfo = players[consoleplayer];
        int sound = CVar.GetCVar("flashlight_flare_recharge_sound",myinfo).GetInt();
		string toPlay;
		
		switch (sound)
		{
			case 0:
				toPlay = "Flare/Recharge0";
			break;
			case 1:
				toPlay = "Flare/Recharge1";
			break;
			case 2:
				toPlay = "Flare/Recharge2";
			break;
			case 3:
				toPlay = "Flare/Recharge3";
			break;
			case 4:
				toPlay = "Flare/Recharge4";
			break;
		}
	
		owner.A_StartSound(toPlay);
	}

    override void DoEffect()
    {
        Super.DoEffect();
        
        int tics = FlareConfig.GetRechargeTime();
        int max_amount = flashlight_flare_recharge_max_amount;
        bool enabled = flashlight_flare_recharge_enabled;
        
        
        if (tics == 0 || !enabled)
            return;
			
		if (owner.CountInv("Flare") < max_amount)
		{
			if (Count >= tics)
			{
				self.PlayRechargeSound();
                owner.GiveInventory("Flare",1);
				Count = 0;
			}
			Count++;
		}
		else
		{
			Count = 0;
		}
    }
}
