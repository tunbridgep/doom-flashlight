class FlashlightBeam : Spotlight
{
    private PlayerPawn toFollow;
    private bool on;
    private bool ready;
    private vector3 offset;
    
    void FollowPlayer(PlayerPawn pp)
    {
        toFollow = pp;
    }
    
    void SetReady(bool r)
    {
        ready = r && toFollow;
    }
    
    private void SetParameters()
    {
        PlayerInfo info = players[toFollow.PlayerNumber()];
               
        Color flashlight_color = CVar.GetCVar("flashlight_color",info).GetString();
        int flashlight_intensity = CVar.GetCVar("flashlight_intensity",info).GetInt();

        float flashlight_inner = CVar.GetCVar("flashlight_inner_angle",info).GetFloat();
        float flashlight_outer = CVar.GetCVar("flashlight_outer_angle",info).GetFloat();
        
        self.SpotInnerAngle = flashlight_inner;
        self.SpotOuterAngle = flashlight_outer;
        
        args[0] = flashlight_color.r;
        args[1] = flashlight_color.g;
        args[2] = flashlight_color.b;
        args[3] = flashlight_intensity;
        
        offset = (0,0,toFollow.ViewHeight);
    }
    
    bool IsOn()
    {
        return on;
    }
    
    override void Activate(Actor activator)
    {
        if (ready)
        {
            SetParameters();
            on = true;
        }
        super.Activate(activator);
    }
    
    override void DeActivate(Actor activator)
    {
        on = false;
        super.DeActivate(activator);
    }
    
    override void Tick()
    {
        if (on && ready)
        {
            A_SetAngle(toFollow.angle, 0);
            A_SetPitch(toFollow.Pitch, SPF_INTERPOLATE);
            
            vector3 pos = (toFollow.pos.x + offset.x, toFollow.pos.y + offset.y, toFollow.pos.z + offset.z);
            
            SetOrigin(pos, true);
        }
        Super.Tick();
    }
}
