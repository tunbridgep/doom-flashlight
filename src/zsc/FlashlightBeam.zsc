class FlashlightBeam : Spotlight
{
    private PlayerPawn toFollow;
    private bool on;
    private vector3 offset;
    private vector3 old;
    const flashlight_performance_intensity_amount = 1.25;
    
    void FollowPlayer(PlayerPawn pp)
    {
        toFollow = pp;
    }
    
    private void SetParameters()
    {              
        Color flashlight_color = FlashlightConfig.GetColor();
        
        self.SpotInnerAngle = flashlight_inner_angle;
        self.SpotOuterAngle = flashlight_outer_angle;
        
        args[0] = flashlight_color.r;
        args[1] = flashlight_color.g;
        args[2] = flashlight_color.b;
        args[3] = flashlight_intensity;
        
        offset = (0,0,toFollow.ViewHeight);
    }
    
    bool IsOn()
    {
        return on;
    }
    
    void TurnOn(Actor activator)
    {
        SetParameters();
        on = true;
        Activate(activator);
    }
    
    void TurnOff(Actor activator)
    {
        on = false;
        DeActivate(activator);
    }
    
    override void Tick()
    {
        if (on && toFollow)
        {
            A_SetAngle(toFollow.angle, 0);
            A_SetPitch(toFollow.Pitch, SPF_INTERPOLATE);
            
            vector3 pos = (toFollow.pos.x + offset.x, toFollow.pos.y + offset.y, toFollow.pos.z + offset.z);
            
            float speed = toFollow.vel.Length();
            
            if (speed > 0 && flashlight_performance_mode)
                args[3] = flashlight_intensity - speed * 20;
            else
                args[3] = Math.Lerp(args[3],flashlight_intensity,90);
            
            SetOrigin(pos, false);
        }
        Super.Tick();
    }
}
