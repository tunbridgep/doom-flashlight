class ActorUtil play
{
    static void MoveToActor(Actor source, Actor dest, vector3 offset = (0,0,0))
    {
        if (!source || !dest)
            return;

        source.A_SetAngle(dest.angle, 0);
        source.A_SetPitch(dest.Pitch, SPF_INTERPOLATE);
        
        vector3 pos = (dest.pos.x + offset.x, dest.pos.y + offset.y, dest.pos.z + offset.z);
        
        source.SetOrigin(pos, true);
    }
    
    static void ReplaceActor(Actor original, String replacement, ChanceValue chance = null)
    {
        bool roll = !chance || chance.Roll();
        if (original && !original.bDestroyed && roll)
        {
            let newthing = Actor.Spawn(replacement,original.pos);
            newthing.A_SetAngle(original.angle, 0);
            newthing.A_SetPitch(original.pitch, SPF_INTERPOLATE);
            newthing.SetOrigin(original.pos, true);
            
            newthing.ChangeTID(original.tid);
            newthing.Special = original.Special;
            
            if (chance)
                Debug.LogVerbose("Replaced "..original.GetTag().." with a "..replacement.." (rolled a "..chance.GetLastRoll().." out of "..chance.GetChance()..")");
            else
                Debug.LogVerbose("Replaced "..original.GetTag().." with a "..replacement);
                
            original.Destroy();
        }
    }
    
    //This will give us more compatibility with other mods.
    //See here: https://zdoom.org/wiki/ZScript_classes
    static bool isClass(Actor a, String classname)
    {
        Class<Actor> cls = classname;
        if (cls)
        {
            return a is cls;
        }
        return false;
    }
}
