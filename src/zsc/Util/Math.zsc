class Math
{
    static int Round (double num)
    {
        int result = (num - floor(num) > 0.5) ? ceil(num) : floor(num);
        return result;
    }
    
    static int Clamp (int value, int clamp_min, int clamp_max)
    {
        if (value < clamp_min)
            return clamp_min;
        if (value > clamp_max)
            return clamp_max;
        return value;
    }
    
    static int ClampMin(int value, int clamp_min)
    {
        if (value < clamp_min)
            return clamp_min;
        return value;
    }
    
    static int ClampMax(int value, int clamp_max)
    {
        if (value > clamp_max)
            return clamp_max;
        return value;
    }
}

class Mathf
{

    static int Clamp (float value, float clamp_min, float clamp_max)
    {
        if (value < clamp_min)
            return clamp_min;
        if (value > clamp_max)
            return clamp_max;
        return value;
    }

    static float ClampMin(double value, double clamp_min)
    {
        if (value < clamp_min)
            return clamp_min;
        return value;
    }
    
    static float ClampMax(double value, double clamp_max)
    {
        if (value > clamp_max)
            return clamp_max;
        return value;
    }
    
    static float Lerp(double start, double end, double interp)
    {
        if (end > start)
            return Mathf.ClampMax(start + interp,end);
        else if (end < start)
            return Mathf.ClampMin(start - interp,end);
        else
            return start;
    }
}
