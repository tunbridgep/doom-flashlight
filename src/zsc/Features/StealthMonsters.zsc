class StealthSpawner : EventHandler
{
    const max_health_small = 100;

    void StealthMonsters(Actor monster)
    {
        int light_level = monster.cursector.lightlevel;
        int hp = monster.health;
        
        bool in_threshold = !StealthMonsterConfig.UsesThreshold() || light_level <= StealthMonsterConfig.GetThreshold();
        bool small = !StealthMonsterConfig.IsSmallOnly() || hp <= max_health_small;
        
        let dice = StealthMonsterConfig.GetChance();
            
        if (in_threshold && small && dice.Roll())
        {           
            Debug.LogVerbose("Monster "..monster.GetTag().." was replaced with a Stealth variant in sector with light level of "..light_level.." based on a roll of "..dice.GetLastRoll().." ("..dice.GetChance().." percent chance)");
            monster.bSTEALTH = true;
        }
    }
    
    override void WorldThingSpawned(WorldEvent e)
    {
        Actor a = e.Thing;
        if (a && a.bISMONSTER && a.GetLevelSpawnTime() <= 5 && StealthMonsterConfig.IsEnabled())
        {
            StealthMonsters(a);
        }
    }

}
