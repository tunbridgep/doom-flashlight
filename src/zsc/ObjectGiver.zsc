//Simply replaces itself with something else
class ObjectGiver : Inventory
{
    Name item_doom;
    Name item_heretic;
    Name item_hexen;
    Name item_strife;
    
    property Items: item_doom, item_heretic, item_hexen;//, item_strife;
    
    override void AttachToOwner(Actor other)
    {
        switch (flashlight_game)
        {
            case 0: //Doom
                other.GiveInventory(item_doom,1);
                break;
            case 1: //Heretic
                other.GiveInventory(item_heretic,1);
                break;
            case 2: //Hexen
                other.GiveInventory(item_hexen,1);
                break;
            case 3: //Strife
                other.GiveInventory(item_strife,1);
                break;
        }
        self.Destroy();
    }
}

class ItemDropper : Inventory
{
    Name item_doom;
    Name item_heretic;
    Name item_hexen;
    Name item_strife;
    
    property Items: item_doom, item_heretic, item_hexen;//, item_strife;

    override void OwnerDied()
    {
        switch (flashlight_game)
        {
            case 0: //Doom
                owner.A_DropItem(item_doom);
                break;
            case 1: //Heretic
                owner.A_DropItem(item_heretic);
                break;
            case 2: //Hexen
                owner.A_DropItem(item_hexen);
                break;
            case 3: //Strife
                owner.A_DropItem(item_strife);
                break;
        }
        self.Destroy();
        super.OwnerDied();
    }
}

class FlashlightGiver : ObjectGiver
{
    Default
    {
        ObjectGiver.Items "Flashlight", "FlameWand", "FlameWand";
    }
}

class FlareGiver : ObjectGiver
{
    Default
    {
        ObjectGiver.Items "Flare", "Flare", "Flare";
    }
}
